
@page "/projects"

@inject AppState AppState

<h3>Projects</h3>


@if (Loading)
{
    <div>LOADING...</div>
}
else if (!AppState.HasProjects)
{
    <div>No data!</div>
}
else
{
    <div class="filters-container">
        <TextEdit @bind-Text="ProjectNameSearch" Placeholder="Filter Name" />
        <Select TValue="String" @bind-SelectedValue="@SelectedTechFilter">
            @foreach (string t in AppState.GetProjectTechs())
            {
                <SelectItem Value="@(t)">@t</SelectItem>
            }
        </Select>
        <Select TValue="String" @bind-SelectedValue="@SelectedTypeFilter">
            @foreach (string t in AppState.GetProjectTypes())
            {
                <SelectItem Value="@(t)">@t</SelectItem>
            }
        </Select>
    </div>
    @foreach (var p in AppState.ProjectsFiltered(this.ProjectNameSearch, this.SelectedTechFilter, this.SelectedTypeFilter))
    {
        <div>@p.Name</div>
    }
}


@code {

    bool Loading { get; set; } = true;
    public string ProjectNameSearch { get; set; }
    public string SelectedTechFilter { get; set; }
    public string SelectedTypeFilter { get; set; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            if (!AppState.HasProjects)
            {
                await AppState.LoadAllProjects();
            }

            this.Loading = false;
            await base.OnInitializedAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
        finally
        {
            this.Loading = false;
        }
    }
}
